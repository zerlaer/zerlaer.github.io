<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Gentoo 配置make.conf</title>
    <link href="/2021/07/11/Gentoo-%E5%AE%89%E8%A3%85gnome%E6%A1%8C%E9%9D%A2/"/>
    <url>/2021/07/11/Gentoo-%E5%AE%89%E8%A3%85gnome%E6%A1%8C%E9%9D%A2/</url>
    
    <content type="html"><![CDATA[<h1 id="配置make-conf"><a href="#配置make-conf" class="headerlink" title="配置make.conf"></a>配置make.conf</h1><p>编辑 /etc/portage/make.conf</p><p>vim /etc/portage/make.conf</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash"><span class="hljs-comment">## 主机设置</span><br><br>CHOST=<span class="hljs-string">&quot;x86_64-pc-linux-gnu&quot;</span><br><br><span class="hljs-comment">## 主机和优化设置</span><br><br>CFLAGS=<span class="hljs-string">&quot;-march=native -O2 -pipe&quot;</span><br><br>CXXFLAGS=<span class="hljs-string">&quot;<span class="hljs-variable">$&#123;CFLAGS&#125;</span>&quot;</span><br><br>FCFLAGS=<span class="hljs-string">&quot;<span class="hljs-variable">$&#123;FFLAGS&#125;</span>&quot;</span><br><br>FFLAGS=<span class="hljs-string">&quot;<span class="hljs-variable">$&#123;CFLAGS&#125;</span>&quot;</span><br><br><span class="hljs-comment">## CPU功能</span><br><br><span class="hljs-comment">## 使用cpuid2cpuflags查看</span><br><br>CPU_FLAGS_X86=<span class="hljs-string">&quot; faes avx avx2 f16c fma3 mmx mmxext pclmul popcnt sse sse2 sse3 sse4_1 sse4_2 ssse3&quot;</span><br><br><span class="hljs-comment">## PORTDIR是官方ebuild的存放位置</span><br><br>PORTDIR=<span class="hljs-string">&quot;/usr/portage&quot;</span><br><br><span class="hljs-comment">## DISTDIR是所有源代码tarball的放置位置</span><br><br>DISTDIR=<span class="hljs-string">&quot;/usr/distfiles&quot;</span><br><br><span class="hljs-comment">## PKGDIR是您可以创建的二进制软件包的位置</span><br><br>PKGDIR=<span class="hljs-string">&quot;/usr/binpkgs&quot;</span><br><br>PORTAGE_LOGDIR是Portage将存储其所有日志的位置<br><br>PORTAGE_LOGDIR=<span class="hljs-string">&quot;/usr/portageLog&quot;</span><br><br>Mask Keywords<br><br>ACCEPT_KEYWORDS=<span class="hljs-string">&quot;~amd64&quot;</span><br><br>ACCEPT_LICENSE用于根据许可限制屏蔽软件包<br><br>ACCEPT_LICENSE=<span class="hljs-string">&quot;*&quot;</span><br><br><span class="hljs-comment">## emerge默认选项</span><br><br>EMERGE_DEFAULT_OPS=<span class="hljs-string">&quot;--keep-going --with-bdeps=y --verbose --quiet --ask&quot;</span><br><br><span class="hljs-comment">## 编译选项</span><br><br>MAKEOPTS=<span class="hljs-string">&quot;-j5&quot;</span><br><br><span class="hljs-comment">## 自动从系统中清除较旧或重叠的软件包</span><br><br>AUTOCLEAN=<span class="hljs-string">&quot;yes&quot;</span><br><br><span class="hljs-comment">## Gentoo Mirror</span><br><br>GENTOO_MIRRORS=<span class="hljs-string">&quot;https://mirrors.tuna.tsinghua.edu.cn/gentoo&quot;</span><br><br><span class="hljs-comment">## EFI 64位平台支持</span><br><br>GRUB_PLATFORMS=<span class="hljs-string">&quot;efi-64&quot;</span><br><br><span class="hljs-comment">## 笔记本触摸板驱动</span><br><br>INPUT_DEVICES=<span class="hljs-string">&quot;synaptics&quot;</span><br><br><span class="hljs-comment">## 显卡驱动</span><br><br>VIDEO_CARDS=<span class="hljs-string">&quot;intel&quot;</span><br><br><span class="hljs-comment">## 声卡驱动</span><br><br>ALSA_CARDS=<span class="hljs-string">&quot;hda-intel&quot;</span><br><br><span class="hljs-comment">## 本地化支持</span><br><br>LC_MESSAGES=C<br><br>L10N=<span class="hljs-string">&quot;en en-US zh zh-CN&quot;</span><br><br>LINGUAS=<span class="hljs-string">&quot;en en_US zh zh_CN&quot;</span><br><br><span class="hljs-comment">## 声明永久USE标志</span><br><br>nouse=<span class="hljs-string">&quot;-consolekit -cups -gps -ibus -printsupport -qt4 -qt5 -kde -webkit -wayland -doc -handbook&quot;</span><br><br>media=<span class="hljs-string">&quot;alsa ffmpeg flac gstreamer jpeg mp3 mp4 png pulseaudio sound svg theora wavpack webp x264 x265 xvid zvbi mkv avi wmv&quot;</span><br><br>book=<span class="hljs-string">&quot;cb chm ebook djvu mobi pdf&quot;</span><br><br>other=<span class="hljs-string">&quot;truetype acpi alsa branding bluetooth icu ipv6 networkmanager nls opengl samba systemd X zsh-completion profile gtk gtk2 gtk3 gnome wxwidgets&quot;</span><br><br>USE=<span class="hljs-string">&quot;<span class="hljs-variable">$nouse</span> <span class="hljs-variable">$media</span> <span class="hljs-variable">$book</span> <span class="hljs-variable">$other</span></span><br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Gentoo 安装gnome桌面</title>
    <link href="/2021/07/11/Gentoo-%E5%AE%89%E8%A3%85gnome%E6%A1%8C%E9%9D%A2-1/"/>
    <url>/2021/07/11/Gentoo-%E5%AE%89%E8%A3%85gnome%E6%A1%8C%E9%9D%A2-1/</url>
    
    <content type="html"><![CDATA[<h3 id="安装准备"><a href="#安装准备" class="headerlink" title="安装准备"></a>安装准备</h3><p>在基本系统安装好之后使用root账户登录，创建普通用户并设置密码</p><p>创建普通用户并加入相应的组</p><p><code>useradd -m -G users,wheel, audio,video,portage,cron,cdrom -s /bin/bash username</code></p><p>修改username密码</p><p><code>passwd username</code></p><p>安装sudo和vim以便在接下来的安装中通过普通用户获取root权限和编辑相关配置文件</p><p><code>emerge -av sudo vim</code></p><p>使用su命令切换到root并修改/etc/sudores</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">vim /etc/sudores<br></code></pre></div></td></tr></table></figure><p>按键盘i 进入输入模式</p><p>将 wheel no password那一栏前面的#去掉，按键盘ESC退出输入模式按Ctrl+:输入wq!强制保存并退出vim;</p><p>编辑make.conf</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">vim /etc/portage/make.conf<br></code></pre></div></td></tr></table></figure><p>打开界面后首先检查安装基础系统时添加MAKEOPTS选项</p><p>并添加</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">VIDEO_CARDS=<span class="hljs-string">&quot;Intel&quot;</span> <span class="hljs-comment">#显卡驱动</span><br><br>INPUT_DRIVERS=<span class="hljs-string">&quot;synaptics&quot;</span> <span class="hljs-comment">#笔记本触摸板驱动</span><br><br>USE=<span class="hljs-string">&quot;X gnome gtk branding systemd alsa acpi&quot;</span> <span class="hljs-comment"># 如果不是使用systemd则需要在这里添加elogind标签</span><br></code></pre></div></td></tr></table></figure><p>按ESC保存退出ESC退出输入模式按Ctrl+:输入wq保存并退出vim;</p><ul><li><input disabled="" type="checkbox"> 留坑 有空再写</li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>Gentoo Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Gentoo 安装基本系统</title>
    <link href="/2021/07/10/Gentoo%E5%AE%89%E8%A3%85%E5%9F%BA%E6%9C%AC%E7%B3%BB%E7%BB%9F/"/>
    <url>/2021/07/10/Gentoo%E5%AE%89%E8%A3%85%E5%9F%BA%E6%9C%AC%E7%B3%BB%E7%BB%9F/</url>
    
    <content type="html"><![CDATA[<h1 id="Gentoo-安装基本系统"><a href="#Gentoo-安装基本系统" class="headerlink" title="Gentoo 安装基本系统"></a>Gentoo 安装基本系统</h1><h3 id="下载镜像"><a href="#下载镜像" class="headerlink" title="下载镜像"></a>下载镜像</h3><p>采用 minimal+stage3 最小 CD 镜像的安装方式，必须要在联网下进行！</p><p>首先去官网下载最新版的 minimal 镜像，镜像下载好之后开始刻录 iso</p><p>windows 下推荐 rufus，开源免费，简单省事</p><p>linux 下推荐使用 dd 命令</p><p>插上 U 盘后终端输入 lsblk 查看盘是 sdc 还是 sd?</p><p>dd 命令用法:if=xxx.iso of=/dev/sdc</p><p>耐心等待几分钟，Minimal 镜像 200 多 M，很快就会写入完成，当提示写入完成后就可以重启选择 U 盘启动，启动过程中会让你选择键盘模式，选择 us，默认是 41，回车，继续启动，启动完成后会进入红色提示符界面，U 盘模式启动完毕。</p><p>首先我们要做的是联网，如果是有线网，已经默认帮你连接好了，这时只需要用 ping 命令确认一下，如果没有插网线用的无线网，需要自行配置</p><h3 id="配置网络"><a href="#配置网络" class="headerlink" title="配置网络"></a>配置网络</h3><p>如果是有线网，会自动连接，可以使用ping 命令测试</p><h4 id="配置无线网"><a href="#配置无线网" class="headerlink" title="配置无线网"></a>配置无线网</h4><p><strong>lspci -k 检查设备驱动是否已经加载</strong></p><p><strong>dmesg | grep firmware 检查内核中的固件信息</strong></p><p>iwconfig 查看无线网卡名称，我的为 wlp3s0, 以下出现此名称的地方请替换为实际网卡名称</p><p><strong>配置 /etc/conf.d/net</strong></p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">modules_wlp3s0=<span class="hljs-string">&quot;wpa_supplicant&quot;</span><br><br>wpa_supplicant_wlp3s0=<span class="hljs-string">&quot;-Dwext&quot;</span><br><br>config_wlp3s0=<span class="hljs-string">&quot;dhcp&quot;</span><br></code></pre></div></td></tr></table></figure><p>其中 wlp3s0 是我的网卡设备</p><p><strong>生成 wpa_supplicant.conf</strong></p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">wpa_passphrase 无线 SSID 无线密码 &gt; /etc/wpa_supplicant/wpa_supplicant.conf<br></code></pre></div></td></tr></table></figure><p>配置启动脚本</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">/etc/init.d<br><br>ln -s net.lo net.wlp3s0<br></code></pre></div></td></tr></table></figure><p>启动网卡</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">/etc/init.d/net.wlp3s0 start<br></code></pre></div></td></tr></table></figure><p>ping 测试</p><h3 id="磁盘分区与挂载"><a href="#磁盘分区与挂载" class="headerlink" title="磁盘分区与挂载"></a>磁盘分区与挂载</h3><p>确认网络连接好之后下面开始分区操作</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">cfdisk /dev/sda<br></code></pre></div></td></tr></table></figure><p>选择 new 选项新建分区</p><p>这里需要提前知道电脑的启动模式，如果是传统的 BIOS 模式不需要单独划分 /boot/efi 分区，如果是 UEFI 模式则需要单独创建 /boot/efi 分区</p><h4 id="UEFI-分区方案"><a href="#UEFI-分区方案" class="headerlink" title="UEFI 分区方案"></a>UEFI 分区方案</h4><p>这里以我的 128g 固态为例:</p><table><thead><tr><th>分区</th><th>大小</th><th>挂载点</th></tr></thead><tbody><tr><td>/dev/sda1</td><td>500M</td><td>/boot/efi</td></tr><tr><td>/dev/sda2</td><td>8G</td><td>swap</td></tr><tr><td>/dev/sda3</td><td>30G</td><td>/</td></tr><tr><td>/dev/sda4</td><td>80G</td><td>/home</td></tr></tbody></table><p>创建好分区后需要写入硬盘，选择 write 后输入 yes 确认</p><p>接下来格式化和挂载分区</p><p>将 sda1 格式化为 FAT32 格式用于启动分区</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">mkfs.vfat -F32 /dev/sda1<br></code></pre></div></td></tr></table></figure><p>将 sda2 格式化为交换空间并打开</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">mkswap /dev/sda2 &amp;&amp; swapon /dev/sda2<br></code></pre></div></td></tr></table></figure><p>将 sda3 格式化为 ext4 格式用于存放系统</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">mkfs.ext4 /dev/sda3<br></code></pre></div></td></tr></table></figure><p>将 sda4 格式化为 ext4 用于存放用户文件</p><p>格式化完毕后需要挂载分区</p><p>首先挂载 / 根分区</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">mount /dev/sda3 /mnt/gentoo<br></code></pre></div></td></tr></table></figure><p>创建 /boot/efi 目录</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">mkdir  -p /mnt/gentoo/boot/efi<br></code></pre></div></td></tr></table></figure><p>创建 home 目录</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">mkdir -p /mnt/gentoo/home<br></code></pre></div></td></tr></table></figure><p>挂载 boot</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">mount /dev/sda1 /mnt/gentoo/boot/boot/efi<br></code></pre></div></td></tr></table></figure><p>挂载 home</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">mount /dev/sda4 /mnt/gentoo/home<br></code></pre></div></td></tr></table></figure><p>挂载完毕输入 mount 检查</p><h3 id="下载基本系统"><a href="#下载基本系统" class="headerlink" title="下载基本系统"></a>下载基本系统</h3><p>下载 stage3</p><p>更新时间</p><p>查看时间</p><p>date</p><p>＃Sat Sep 22 09:12:08 UTC 2019</p><p>＃本地时间：9 月 22 日 17:08 2019</p><p>＃设置时间： 9 月 22 日 17:08 2019</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">date 092217082019<br></code></pre></div></td></tr></table></figure><p>下载 stage3</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /mnt/gentoo<br><br>links [https://mirrors.163.com/gentoo<br></code></pre></div></td></tr></table></figure><p><a href="https://mirrors.163.com/gentoo">https://mirrors.163.com/gentoo</a>)</p><p>选择 releases/amd64/autobuilds/current-install-amd64-minimal/stage3-amd64-201909xxxxx.tar.xz #文件名以自己下载的为准</p><p>回车开始下载，下载完之后，按 ESC -&gt; 回车 -&gt; Exit -&gt; 回车 退出</p><p>文件会存放在当前目录，使用 ls 命令查看</p><p>解压 stage3</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">tar xvf stage3-amd64-201909xxxxx.tar.xz <span class="hljs-comment">#文件名以自己下载的为准</span><br></code></pre></div></td></tr></table></figure><p>解压过程中注意观察有没有 error 错误</p><p>解压完成后配置 make.conf</p><p>检查 cpu 核心数</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">cat /proc/cpuinfo | grep processor<br></code></pre></div></td></tr></table></figure><p>我的是 4 排 就证明是 4 核</p><p>所以我的电脑设置是：MAKEOPTS=”-j5”</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash"><span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;MAKEOPTS=&quot;-j5&quot;&#x27;</span> &gt;&gt; /etc/portage/make.conf<br></code></pre></div></td></tr></table></figure><p>或者编辑 make.conf</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">nano /etc/portage/make.conf<br><span class="hljs-comment">#添加 </span><br>MAKEOPTS＝<span class="hljs-string">&quot;-j5&quot;</span><br></code></pre></div></td></tr></table></figure><p><strong>选择镜像</strong></p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">microrselect -i -o  &gt;&gt; /mnt/gentoo/etc/portage/make.conf<br><br>mkdir --parents/mnt/gentoo/etc/repos.conf<br><br>cp /mnt/gentoo/usr/share/portage/config/repos. conf /mnt/gentop/repos.conf/gentoo.conf<br></code></pre></div></td></tr></table></figure><p><strong>复制 DNS 信息</strong></p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">cp --dereference /etc/resolv.conf<br></code></pre></div></td></tr></table></figure><p><strong>挂载文件系统</strong></p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">mount --types proc /proc /mnt/gentoo/proce<br><br>mount --rbind /sys /mnt/gentoo/sys<br><br>mount. --rbind /dev /mnt/gentoo/dev<br></code></pre></div></td></tr></table></figure><p><strong>進入新環境</strong></p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">chroot /mnt/gentoo /bin/base<br><br>sourse /etc/profiler<br><br><span class="hljs-built_in">export</span> PS1＂(chroot) <span class="hljs-variable">$PS1</span><br></code></pre></div></td></tr></table></figure><p>从 Web 安装 ebuild 存储库快照</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">emerge-webrsync<br></code></pre></div></td></tr></table></figure><p>注意：这一步跟上面的选择镜像有关，如果发现一直处于执行状态，那么检查一下文件 /mnt/gentoo/etc/portage/make.conf 是否正确。</p><h3 id="配置系统"><a href="#配置系统" class="headerlink" title="配置系统"></a>配置系统</h3><p><strong>选择配置</strong></p><p>配置列表是实时更新的，所以需要根据实际做出选择，这里选择默认 12 即可，如果是 systemd，则需要选择带 systemd 字样的配置。</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">eselect profile list<br><br>eselect profile <span class="hljs-built_in">set</span> 12<br></code></pre></div></td></tr></table></figure><p><strong>更新 <a href="/world">@world </a> 集</strong> </p><p>因为没有选择桌面环境，所有更新时间会短一些。</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">time emerge --ask --quiet --update --deep --newuse @world<br></code></pre></div></td></tr></table></figure><p><strong>时区</strong></p><p>选择本地时区</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">ls /usr/share/zoneinfo/Asia<br><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Asia/Shanghai&quot;</span> &gt; /etc/timezone<br></code></pre></div></td></tr></table></figure><p>更新时区</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">emerge --config sys-libs/timezone-data<br></code></pre></div></td></tr></table></figure><p><strong>配置语言环境</strong></p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash"><span class="hljs-built_in">echo</span> en_US.UTF-8 &gt; /etc/locale.gen<br></code></pre></div></td></tr></table></figure><p>根据如下修改，这里需要注意，gentoo 默认不支持 zh_CN.UTF-8</p><p>运行 locale-gen。它将生成 /etc/locale.gen 文件中指定的所有语言环境。</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">locale-gen<br><br>eselect locale list<br><br>eselect locale <span class="hljs-built_in">set</span> 6<br></code></pre></div></td></tr></table></figure><p>选择 en_US UTF-8, 确保系统语言环境为英文，中文会报错</p><p>重新加载环境：</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">env-update &amp;&amp; <span class="hljs-built_in">source</span> /etc/profile &amp;&amp; <span class="hljs-built_in">export</span> PS1=<span class="hljs-string">&quot;(chroot) <span class="hljs-variable">$PS1</span>&quot;</span><br></code></pre></div></td></tr></table></figure><p>安装内核源码</p><p>对于基于 amd64 的系统，Gentoo 推荐使用 sys-kernel /gentoo-sources 包。</p><p>选择适当的内核源并使用 emerge 安装它：</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">emerge --ask sys-kernel/gentoo-sources<br></code></pre></div></td></tr></table></figure><p>如果提示 needs updating</p><p>则运行</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">etc-update<br></code></pre></div></td></tr></table></figure><p>然后输入 - 3 -&gt; 回车 -&gt; yes , 之后在重新装一次即可。</p><h3 id="编译内核"><a href="#编译内核" class="headerlink" title="编译内核"></a>编译内核</h3><p><strong>配置 kernel</strong></p><p>这里使用自动配置方式，需要手动配置的请看 Gentoo Wiki。</p><p>安装 kernel 自动配置工具 genkernel</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">emerge --ask --quiet sys-kernel/genkernel<br></code></pre></div></td></tr></table></figure><p>安装时如果提示 USE changes，则运行：</p><p>etc-update</p><p>然后输入 - 3 -&gt; 回车 -&gt; yes , 之后在重新执行 time emerge –ask –quiet sys-kernel/genkernel 即可。</p><p>安装完成之后，编辑 /etc/fstab 系统的挂载点：</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">nano -w /etc/fstab<br></code></pre></div></td></tr></table></figure><p>修改分区表并保存，分区挂载点会永久生效</p><p>将最前面的删掉修改为 /dev/sda1 或其他 sda 分区，这里注意修改 boot/efi 的文件系统为 vfat 而不是 ext4</p><p>然后开始编译内核</p><p>如果选择手动编译请去官网查看教程</p><p>这里使用 genkernel 一键编译，</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">genkernel all<br></code></pre></div></td></tr></table></figure><p>大概需要编译半小时左右，编译完成检查 boot 分区</p><p>ls /boot/</p><p>＃会显示两个文件</p><p>遵循先多后少的选择，先自动编译</p><p>让系统跑起来，以后慢慢精简内核</p><p><strong>安装固件</strong></p><p>某些驱动程序在工作之前需要在系统上安装其他固件。安装固件相当于 win 上装驱动</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">emerge --ask --quiet sys-kernel/linux-firmware<br></code></pre></div></td></tr></table></figure><p><strong>修改主机名</strong></p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">nano -w /etc/conf.d/hostname<br></code></pre></div></td></tr></table></figure><p>＃将 hostname 变量设置为自己取的主机名字</p><figure class="highlight ini"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs ini"><span class="hljs-attr">hostname</span> =“ShadowElves”<br></code></pre></div></td></tr></table></figure><p><strong>配置有线网</strong></p><figure class="highlight brainfuck"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs brainfuck"><span class="hljs-comment">emerge</span> --<span class="hljs-comment">ask</span> <span class="hljs-comment"> </span>--<span class="hljs-comment">quiet</span> --<span class="hljs-comment">noreplace</span> <span class="hljs-comment">net</span><span class="hljs-literal">-</span><span class="hljs-comment">misc/netifrc</span><br></code></pre></div></td></tr></table></figure><p>设置启动时自动启动网络</p><p>要在引导时激活网络接口，需要将它们添加到默认运行级别。</p><p>首先需要知道网络接口名称：</p><p>使用 ifconfig 查看是 eth0，还是 enp3s0</p><p>这里使用 enp3s0：</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">cd /etc/init.d<br><br>ln -s net.lo net.enp3s0<br><br>rc-update add net.enp3s0 default<br></code></pre></div></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">nano -w /etc/hosts<br><br>在 localhost 后添加主机名 ShadowElves<br><br>127.0.0.1 localhost ShadowElves<br></code></pre></div></td></tr></table></figure><p>设置 root 密码</p><p>passwd</p><p>输入两次密码，提示 successful 证明修改成功</p><p>设置时钟</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">nano -w /etc/conf.d/hwclock   ＃修改：clock=&quot;local&quot;<br></code></pre></div></td></tr></table></figure><h3 id="安装工具"><a href="#安装工具" class="headerlink" title="安装工具"></a>安装工具</h3><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> 系统日志记录</span><br>emerge --ask sysklogd<br>rc-update add sysklogd default<br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"> Cron 守护程序</span><br>emerge --ask cronie<br><br>rc-update add cronie default<br><span class="hljs-meta">#</span><span class="bash"> 文件索引</span><br>emerge --ask mlocate<br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"> DHCP 客户端</span><br>emerge --ask dhcpcd<br>rc-update add dhcpcd default<br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"> 安装无线网络工具</span><br>emerge --ask iw wpa_supplicant<br></code></pre></div></td></tr></table></figure><h3 id="配置引导"><a href="#配置引导" class="headerlink" title="配置引导"></a>配置引导</h3><p>配置引导加载程序</p><p>UEFI 用户注意：</p><p>用户需要确保 GRUB_PLATFORMS=”efi-64” 已启用，添加 GRUB_PLATFORMS=”efi-64”</p><p>到 /etc/portage/make.conf 文件中，然后在安装 GRUB2 ：</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">echo &#x27;GRUB_PLATFORMS=&quot;efi-64&quot;&#x27; &gt;&gt; /etc/portage/make.conf<br><br>emerge -av grub:2 # 注意观察是否有 GRUB_PLATFORMS=&quot;efi-64&quot; 字样<br></code></pre></div></td></tr></table></figure><p>安装 GRUB2 软件</p><p>接下来，通过 grub-install 命令将必要的 GRUB2 文件安装到 /boot/grub 目录，确保 boot 分区已经挂载，否则会安装失败</p><p>UEFI 用户：</p><p>grub-install –target=x86_64-efi –efi-directory=/boot/efi</p><p>BIOS 用户：</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">grub-install /dev/sda # /dev/sda 为 /boot 挂载分区<br></code></pre></div></td></tr></table></figure><p>提示 no error reported 证明安装成功</p><p>运行 grub-mkconfig 命令：</p><p>GRUB2 将自动检测要引导的内核来生成最终的 GRUB 配置</p><figure class="highlight awk"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs awk">grub-mkconfig -o <span class="hljs-regexp">/boot/g</span>rub/grub.cfg<br></code></pre></div></td></tr></table></figure><p>出现两个 found 开头的文字和 done</p><p>证明引导程序安装成功</p><p>没有的话重新 genkernel all 生成再重复上一步操作</p><p>如果是安装 win10 与 gentoo 双系统，需要另外安装 os-prober 用以检测 win10 的引导：</p><figure class="highlight plaintext"><figcaption><span>为</span><a href="/boot">挂载分区</a></figcaption><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs ＃/dev/sda">emerge --ask os-prober<br></code></pre></div></td></tr></table></figure><p>然后执行</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">os-prober<br></code></pre></div></td></tr></table></figure><h3 id="重新启动系统"><a href="#重新启动系统" class="headerlink" title="重新启动系统"></a>重新启动系统</h3><p>退出 chroot 环境并卸载所有已安装的分区。</p><p>然后重新启动：reboot。</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">exit<br><br>cd<br><br>umount -l /mnt/gentoo/dev&#123;/shm,/pts,&#125;<br><br>umount -R /mnt/gentoo<br><br>reboot<br></code></pre></div></td></tr></table></figure><p>不要忘记拔掉优盘，否则可能会再次引导 CD 而不是新的 Gentoo 系统。</p><p>gentoo 命令行登录，此时输入 root -&gt; 回车 -&gt; 输入密码，即可进入 gentoo 系统。</p><p>创建普通用户用于登陆桌面</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">useradd -m -G users,wheel,audio,video,cdrom,portage,cron -s /bin/bash moonery<br></code></pre></div></td></tr></table></figure><p>passwd moonery　＃设置用户密码</p><p>至此，Gentoo 的基本系统已安装完成！</p><p>接下来是安装显卡驱动，触摸板驱动 X 服务和桌面，这些会在下一篇文章中写到，敬请关注！</p>]]></content>
    
    
    
    <tags>
      
      <tag>Gentoo Linux</tag>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
